/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package metime;

import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author DeeShalz
 */
public class EventUI extends javax.swing.JFrame {

    private EventCntl parentEventCntl;
    String newTimeConversion;
    
    public EventUI(EventCntl newParentEventCntl) 
    {
        this.parentEventCntl = newParentEventCntl;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        addEventNameTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        addEventLocationTextField = new javax.swing.JTextField();
        addDateLabel = new javax.swing.JLabel();
        monthTextField = new javax.swing.JTextField();
        monthLabel = new javax.swing.JLabel();
        dayLabel = new javax.swing.JLabel();
        yearLabel = new javax.swing.JLabel();
        dayTextField = new javax.swing.JTextField();
        yearTextField = new javax.swing.JTextField();
        addTimeLabel = new javax.swing.JLabel();
        hourTextField = new javax.swing.JTextField();
        timeColonLabel = new javax.swing.JLabel();
        minuteTextField = new javax.swing.JTextField();
        addEventButton = new javax.swing.JButton();
        eventNameLabel = new javax.swing.JLabel();
        eventLocationLabel = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        allDayLabel = new javax.swing.JLabel();
        yesRadioButton = new javax.swing.JRadioButton();
        noRadioButton = new javax.swing.JRadioButton();
        amRadioButton = new javax.swing.JRadioButton();
        pmRadioButton = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        addEventNameTextField.setText("Add Event Name");

        addEventLocationTextField.setText("Add Event Location");

        addDateLabel.setText("Add Date: (MM/DD/YYYY)");

        monthTextField.setText("01");

        monthLabel.setText("Month:");

        dayLabel.setText("Day: ");

        yearLabel.setText("Year: ");

        dayTextField.setText("01");

        yearTextField.setText("2017");

        addTimeLabel.setText("Add Time: ");

        hourTextField.setText("00");

        timeColonLabel.setText(":");

        minuteTextField.setText("00");

        addEventButton.setText("Add Event");
        addEventButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addEventButtonActionPerformed(evt);
            }
        });

        eventNameLabel.setText("Event Name: ");

        eventLocationLabel.setText("Event Location: ");

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        allDayLabel.setText("All Day Event?");

        buttonGroup1.add(yesRadioButton);
        yesRadioButton.setText("Yes");
        yesRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yesRadioButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(noRadioButton);
        noRadioButton.setText("No");
        noRadioButton.setSelected(true);
        noRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noRadioButtonActionPerformed(evt);
            }
        });

        buttonGroup3.add(amRadioButton);
        amRadioButton.setText("AM");
        amRadioButton.setSelected(true);
        amRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amRadioButtonActionPerformed(evt);
            }
        });

        buttonGroup3.add(pmRadioButton);
        pmRadioButton.setText("PM");
        pmRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pmRadioButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(addDateLabel)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(eventNameLabel)
                                            .addComponent(eventLocationLabel))
                                        .addGap(30, 30, 30))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(monthLabel)
                                    .addComponent(dayLabel)
                                    .addComponent(yearLabel))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(dayTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(yearTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(monthTextField))
                                .addGap(4, 4, 4)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(addEventLocationTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
                                    .addComponent(addEventNameTextField)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addTimeLabel)
                                    .addComponent(allDayLabel)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(yesRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(noRadioButton))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(hourTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(timeColonLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(minuteTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(amRadioButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(pmRadioButton))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel1)))
                .addContainerGap(98, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(exitButton)
                .addGap(18, 18, 18)
                .addComponent(backButton)
                .addGap(18, 18, 18)
                .addComponent(addEventButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addEventNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eventNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addEventLocationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eventLocationLabel))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addDateLabel)
                            .addComponent(allDayLabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(monthTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(monthLabel)
                            .addComponent(yesRadioButton)
                            .addComponent(noRadioButton))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dayLabel)
                            .addComponent(dayTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(addTimeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(yearLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(hourTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(timeColonLabel)
                            .addComponent(minuteTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(yearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(amRadioButton)
                            .addComponent(pmRadioButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backButton)
                    .addComponent(addEventButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(exitButton))
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addEventButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addEventButtonActionPerformed
        String newEventName = this.addEventNameTextField.getText();
        String newEventLocation = this.addEventLocationTextField.getText();
        String newEventMonth = this.monthTextField.getText();
        String newEventDay = this.dayTextField.getText();
        String newEventYear = this.yearTextField.getText();
        String newEventHour = this.hourTextField.getText();
        String newEventMinute = this.minuteTextField.getText();
        
        // check new Event's validity before adding it
        if(newEventName.equalsIgnoreCase("Add Event Name") || newEventLocation.equalsIgnoreCase("Add Event Location"))
        {
            JOptionPane.showMessageDialog(null, "Please ensure that the event has a name and a location.");
        }
        else
        {
            if (!this.yesRadioButton.isSelected() && !this.noRadioButton.isSelected()) 
            {
                JOptionPane.showMessageDialog(null, "Please indicate if this is an all-day event or not.");
            }
            else if(this.noRadioButton.isSelected() && (!this.amRadioButton.isSelected() && !this.pmRadioButton.isSelected()))
            {
                JOptionPane.showMessageDialog(null, "Please indicate if the event time is in the AM or PM");
            }
            else if (this.yesRadioButton.isSelected()) 
            {
                this.parentEventCntl.addEvent(new Event(newEventName, newEventMonth, 
                        newEventDay, newEventYear, newEventLocation));
                
                JOptionPane.showMessageDialog(null, this.parentEventCntl.getEventList().getLastEvent());
            } 
            else
            {
                if(this.pmRadioButton.isSelected())
                {
                    int hourConversion = Integer.valueOf(newEventHour) + 12;
                    newEventHour = String.valueOf(hourConversion);
                }
                // check if time is on the hour or a specific time
                if (newEventMinute.equals("00")) 
                {
                    this.parentEventCntl.addEvent(new Event(newEventName, newEventMonth, 
                            newEventDay, newEventYear, newEventHour, newEventLocation));
                    JOptionPane.showMessageDialog(null, this.parentEventCntl.getEventList().getLastEvent());
                } 
                else 
                {
                    this.parentEventCntl.addEvent(new Event(newEventName, newEventMonth,
                            newEventDay, newEventYear, newEventHour, newEventMinute, newEventLocation));
                    JOptionPane.showMessageDialog(null, this.parentEventCntl.getEventList().getLastEvent());
                }
            }
        }
    }//GEN-LAST:event_addEventButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        this.setVisible(false);
        this.parentEventCntl.getParentNavigationCntl().requestMainMenuUI();
    }//GEN-LAST:event_backButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed

    private void yesRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yesRadioButtonActionPerformed
        JOptionPane.showMessageDialog(null, "You do not need to specify an event time.");
    }//GEN-LAST:event_yesRadioButtonActionPerformed

    private void noRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noRadioButtonActionPerformed
        JOptionPane.showMessageDialog(null, "Please specify an event time.");
    }//GEN-LAST:event_noRadioButtonActionPerformed

    private void amRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amRadioButtonActionPerformed

    }//GEN-LAST:event_amRadioButtonActionPerformed

    private void pmRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pmRadioButtonActionPerformed
        
    }//GEN-LAST:event_pmRadioButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EventUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EventUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EventUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EventUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
        /* Create and display the form 
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EventUI().setVisible(true);
            }
        });
        */
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addDateLabel;
    private javax.swing.JButton addEventButton;
    private javax.swing.JTextField addEventLocationTextField;
    private javax.swing.JTextField addEventNameTextField;
    private javax.swing.JLabel addTimeLabel;
    private javax.swing.JLabel allDayLabel;
    private javax.swing.JRadioButton amRadioButton;
    private javax.swing.JButton backButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JLabel dayLabel;
    private javax.swing.JTextField dayTextField;
    private javax.swing.JLabel eventLocationLabel;
    private javax.swing.JLabel eventNameLabel;
    private javax.swing.JButton exitButton;
    private javax.swing.JTextField hourTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField minuteTextField;
    private javax.swing.JLabel monthLabel;
    private javax.swing.JTextField monthTextField;
    private javax.swing.JRadioButton noRadioButton;
    private javax.swing.JRadioButton pmRadioButton;
    private javax.swing.JLabel timeColonLabel;
    private javax.swing.JLabel yearLabel;
    private javax.swing.JTextField yearTextField;
    private javax.swing.JRadioButton yesRadioButton;
    // End of variables declaration//GEN-END:variables
}
